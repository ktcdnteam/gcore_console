package model

import "time"

type AutoGenerated struct {
	ID      int `json:"id"`
	Options struct {
		CustomServerName  any `json:"custom_server_name"`
		Slice             any `json:"slice"`
		GzipOn            any `json:"gzipOn"`
		BrotliCompression any `json:"brotli_compression"`
		IgnoreQueryString struct {
			Enabled bool `json:"enabled"`
			Value   bool `json:"value"`
		} `json:"ignoreQueryString"`
		HostHeader struct {
			Enabled bool   `json:"enabled"`
			Value   string `json:"value"`
		} `json:"hostHeader"`
		StaticHeaders         any `json:"staticHeaders"`
		StaticResponseHeaders any `json:"static_response_headers"`
		StaticRequestHeaders  any `json:"staticRequestHeaders"`
		AllowedHTTPMethods    any `json:"allowedHttpMethods"`
		Stale                 struct {
			Enabled bool     `json:"enabled"`
			Value   []string `json:"value"`
		} `json:"stale"`
		Cors                 any `json:"cors"`
		ProxyCacheMethodsSet any `json:"proxy_cache_methods_set"`
		Rewrite              any `json:"rewrite"`
		ForceReturn          any `json:"force_return"`
		SecureKey            struct {
			Enabled bool `json:"enabled"`
			Key     any  `json:"key"`
			Type    int  `json:"type"`
		} `json:"secure_key"`
		CacheExpire  any `json:"cache_expire"`
		DisableCache any `json:"disable_cache"`
		IgnoreCookie struct {
			Enabled bool `json:"enabled"`
			Value   bool `json:"value"`
		} `json:"ignore_cookie"`
		CacheHTTPHeaders            any `json:"cache_http_headers"`
		ResponseHeadersHidingPolicy any `json:"response_headers_hiding_policy"`
		OverrideBrowserTTL          any `json:"override_browser_ttl"`
		FetchCompressed             any `json:"fetch_compressed"`
		DisableProxyForceRanges     any `json:"disable_proxy_force_ranges"`
		RedirectHTTPToHTTPS         any `json:"redirect_http_to_https"`
		RedirectHTTPSToHTTP         any `json:"redirect_https_to_http"`
		Sni                         struct {
			Enabled        bool   `json:"enabled"`
			SniType        string `json:"sni_type"`
			CustomHostname string `json:"custom_hostname"`
		} `json:"sni"`
		LimitBandwidth any `json:"limit_bandwidth"`
		RequestLimiter any `json:"request_limiter"`
		BotProtection  any `json:"bot_protection"`
		Waf            any `json:"waf"`
		CountryACL     struct {
			Enabled        bool     `json:"enabled"`
			PolicyType     string   `json:"policy_type"`
			ExceptedValues []string `json:"excepted_values"`
		} `json:"country_acl"`
		ReferrerACL          any `json:"referrer_acl"`
		UserAgentACL         any `json:"user_agent_acl"`
		IPAddressACL         any `json:"ip_address_acl"`
		QueryParamsBlacklist any `json:"query_params_blacklist"`
		QueryParamsWhitelist any `json:"query_params_whitelist"`
		BrowserCacheSettings struct {
			Enabled bool   `json:"enabled"`
			Value   string `json:"value"`
		} `json:"browser_cache_settings"`
		EdgeCacheSettings struct {
			Enabled      bool `json:"enabled"`
			CustomValues struct {
			} `json:"custom_values"`
			Value string `json:"value"`
		} `json:"edge_cache_settings"`
		ForwardHostHeader   any `json:"forward_host_header"`
		Websockets          any `json:"websockets"`
		UseDefaultLeChain   any `json:"use_default_le_chain"`
		UseRsaLeCert        any `json:"use_rsa_le_cert"`
		UseDNS01LeChallenge any `json:"use_dns01_le_challenge"`
		TLSVersions         struct {
			Enabled bool     `json:"enabled"`
			Value   []string `json:"value"`
		} `json:"tls_versions"`
		FollowOriginRedirect struct {
			Enabled bool  `json:"enabled"`
			Codes   []int `json:"codes"`
		} `json:"follow_origin_redirect"`
		HTTP3Enabled any `json:"http3_enabled"`
		ImageStack   any `json:"image_stack"`
	} `json:"options"`
	Deleted            bool      `json:"deleted"`
	SecondaryHostnames []any     `json:"secondaryHostnames"`
	Rules              []any     `json:"rules"`
	Client             int       `json:"client"`
	Status             string    `json:"status"`
	Active             bool      `json:"active"`
	Enabled            bool      `json:"enabled"`
	PresetApplied      bool      `json:"preset_applied"`
	VpEnabled          bool      `json:"vp_enabled"`
	OriginGroupName    string    `json:"originGroup_name"`
	Shielded           bool      `json:"shielded"`
	ShieldDc           any       `json:"shield_dc"`
	ShieldEnabled      bool      `json:"shield_enabled"`
	FullCustomEnabled  bool      `json:"full_custom_enabled"`
	CanPurgeByUrls     bool      `json:"can_purge_by_urls"`
	Name               any       `json:"name"`
	Created            time.Time `json:"created"`
	Updated            time.Time `json:"updated"`
	OriginProtocol     string    `json:"originProtocol"`
	Cname              string    `json:"cname"`
	SslEnabled         bool      `json:"sslEnabled"`
	SslAutomated       bool      `json:"ssl_automated"`
	ProxySslEnabled    bool      `json:"proxy_ssl_enabled"`
	SuspendDate        any       `json:"suspend_date"`
	Suspended          bool      `json:"suspended"`
	IsPrimary          any       `json:"is_primary"`
	Description        string    `json:"description"`
	OriginGroup        int       `json:"originGroup"`
	SslData            any       `json:"sslData"`
	ProxySslCa         any       `json:"proxy_ssl_ca"`
	ProxySslData       any       `json:"proxy_ssl_data"`
	ShieldRoutingMap   any       `json:"shield_routing_map"`
	PrimaryResource    any       `json:"primary_resource"`
}
